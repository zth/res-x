// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var H$ResX = require("./H.js");
var Core__Option = require("@rescript/core/src/Core__Option.js");

function make() {
  return {
          status: 200,
          redirect: undefined,
          docHeader: "<!DOCTYPE html>",
          headContent: [],
          titleSegments: []
        };
}

function setStatus(t, status) {
  t.status = status;
}

function redirect(t, url, status) {
  t.redirect = [
    url,
    status
  ];
  return null;
}

function getCurrentStatus(t) {
  return t.status;
}

function getCurrentRedirect(t) {
  return t.redirect;
}

function getTitleSegments(t) {
  return t.titleSegments.slice();
}

function getDocHeader(t) {
  return Core__Option.getOr(t.docHeader, "");
}

function setDocHeader(t, docHeader) {
  t.docHeader = docHeader;
}

function appendToHead(t, content) {
  t.headContent.push(content);
}

function appendTitleSegment(t, segment) {
  t.titleSegments.push(segment);
}

function prependTitleSegment(t, segment) {
  t.titleSegments.unshift(segment);
}

function setFullTitle(t, title) {
  t.titleSegments.splice(0, t.titleSegments.length, title);
}

async function getAppendedHeadContent(t) {
  var headContent = t.headContent;
  if (headContent.length !== 0) {
    return await H$ResX.renderToString(headContent);
  }
  
}

exports.make = make;
exports.setStatus = setStatus;
exports.redirect = redirect;
exports.getCurrentStatus = getCurrentStatus;
exports.getCurrentRedirect = getCurrentRedirect;
exports.getTitleSegments = getTitleSegments;
exports.getDocHeader = getDocHeader;
exports.appendToHead = appendToHead;
exports.getAppendedHeadContent = getAppendedHeadContent;
exports.appendTitleSegment = appendTitleSegment;
exports.prependTitleSegment = prependTitleSegment;
exports.setFullTitle = setFullTitle;
exports.setDocHeader = setDocHeader;
/* H-ResX Not a pure module */
