// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';


((function () {
        var getTarget = function (target, $$this) {
          if (typeof target !== "object") {
            return $$this;
          } else {
            return document.querySelector(target.selector);
          }
        };
        document.addEventListener("click", (function ($$event) {
                var $$this = $$event.target;
                var match = $$this.attributes["resx-onclick"];
                var actions = match !== undefined ? JSON.parse(match.value) : [];
                actions.forEach(function (action) {
                      var target = getTarget(action.target, $$this);
                      if (target === null) {
                        return ;
                      }
                      switch (action.kind) {
                        case "ToggleClass" :
                            return target.classList.toggle(action.className);
                        case "RemoveClass" :
                            return target.classList.remove(action.className);
                        case "AddClass" :
                            return target.classList.add(action.className);
                        case "SwapClass" :
                            target.classList.remove(action.fromClassName);
                            return target.classList.add(action.toClassName);
                        case "RemoveElement" :
                            return target.remove();
                        
                      }
                    });
              }), undefined);
        document.addEventListener("invalid", (function ($$event) {
                var $$this = $$event.target;
                var match = $$this.validity;
                var match$1 = $$this.attributes["resx-validity-message"];
                if (match === undefined) {
                  return ;
                }
                if (match.valid) {
                  return ;
                }
                if (match$1 === undefined) {
                  return ;
                }
                var validityMessages = JSON.parse(match$1.value);
                var messageToSet = match.badInput ? validityMessages.badInput : (
                    match.patternMismatch ? validityMessages.patternMismatch : (
                        match.rangeOverflow ? validityMessages.rangeOverflow : (
                            match.rangeUnderflow ? validityMessages.rangeUnderflow : (
                                match.stepMismatch ? validityMessages.stepMismatch : (
                                    match.tooLong ? validityMessages.tooLong : (
                                        match.tooShort ? validityMessages.tooShort : (
                                            match.typeMismatch ? validityMessages.typeMismatch : (
                                                match.valueMissing ? validityMessages.valueMissing : undefined
                                              )
                                          )
                                      )
                                  )
                              )
                          )
                      )
                  );
                if (messageToSet !== undefined) {
                  return $$this.setCustomValidity(messageToSet);
                }
                
              }), true);
        document.addEventListener("change", (function ($$event) {
                var $$this = $$event.target;
                var match = $$this.attributes["resx-validity-message"];
                if (match !== undefined) {
                  return $$this.setCustomValidity("");
                }
                
              }), undefined);
      })());

/*  Not a pure module */
