// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Htmx = require("rescript-x/src/Htmx.js");
var Js_exn = require("rescript/lib/js/js_exn.js");
var $$FormData = require("rescript-x/src/FormData.js");
var ResXAssets = require("./__generated__/ResXAssets.js");
var Caml_option = require("rescript/lib/js/caml_option.js");
var HtmxHandler = require("./HtmxHandler.js");
var ResX__React = require("rescript-x/src/ResX__React.js");
var Core__Option = require("@rescript/core/src/Core__Option.js");
var ResX__Client = require("rescript-x/src/ResX__Client.js");
var ErrorBoundary = require("rescript-x/src/ErrorBoundary.js");
var ResX__Handlers = require("rescript-x/src/ResX__Handlers.js");
var ResX__ReactDOM = require("rescript-x/src/ResX__ReactDOM.js");
var FormDataHelpers = require("rescript-x/src/FormDataHelpers.js");
var FailingComponent = require("./FailingComponent.js");
var Caml_js_exceptions = require("rescript/lib/js/caml_js_exceptions.js");

var onForm = ResX__Handlers.hxPost(HtmxHandler.handler, "/user-single", (async function (param) {
        var formData = await param.request.formData();
        try {
          var name = $$FormData.expectString(formData, "name", undefined);
          var active = FormDataHelpers.expectCheckbox(formData, "active");
          return ResX__ReactDOM.jsx("div", {
                      children: "Some user " + name + " is " + (
                        active ? "active" : "not active"
                      )
                    });
        }
        catch (raw_err){
          var err = Caml_js_exceptions.internalToOCamlException(raw_err);
          if (err.RE_EXN_ID === Js_exn.$$Error) {
            console.error(err._1);
            return ResX__ReactDOM.jsx("div", {
                        children: "Failed"
                      });
          }
          throw err;
        }
      }));

function UserPage(props) {
  var ctx = HtmxHandler.useContext();
  ctx.headers.set("Content-Type", "text/html");
  return ResX__ReactDOM.jsxs("div", {
              children: [
                ResX__ReactDOM.jsxs("form", {
                      children: [
                        ResX__ReactDOM.jsx("img", {
                              src: ResXAssets.assets.images__test_img_jpeg
                            }),
                        ResX__ReactDOM.jsx("div", {
                              children: ResX__ReactDOM.jsx("div", {
                                    children: "User 123 3333 " + props.userId,
                                    className: "text-2xl bg-slate-200 text-gray-500"
                                  }),
                              id: "user-single"
                            }),
                        ResX__ReactDOM.jsx("div", {
                              children: ResX__ReactDOM.jsx("input", {
                                    className: "p-2",
                                    name: "name",
                                    type: "text"
                                  }),
                              className: "p-2"
                            }),
                        ResX__ReactDOM.jsx("div", {
                              children: ResX__ReactDOM.jsx("input", {
                                    className: "invalid:border-green-400 border border-gray-500",
                                    name: "lastName",
                                    required: true,
                                    type: "text",
                                    "resx-validity-message": Caml_option.some(ResX__Client.ValidityMessage.make({
                                              valueMissing: "Yo, you need to fill this in!"
                                            }))
                                  }),
                              className: "p-2"
                            }),
                        ResX__ReactDOM.jsxs("details", {
                              children: [
                                ResX__ReactDOM.jsx("summary", {
                                      children: "What is HTML?"
                                    }),
                                "HTML stands for HyperText Markup Language. It's the standard markup language for documents designed to be displayed in a web browser."
                              ]
                            }),
                        ResX__ReactDOM.jsx("div", {
                              children: ResX__ReactDOM.jsx("input", {
                                    name: "active",
                                    type: "checkbox"
                                  }),
                              className: "p-2"
                            }),
                        ResX__ReactDOM.jsxs("div", {
                              children: [
                                ResX__ReactDOM.jsxs("label", {
                                      children: [
                                        ResX__ReactDOM.jsx("input", {
                                              name: "status",
                                              type: "radio",
                                              value: "on"
                                            }),
                                        "On"
                                      ]
                                    }),
                                ResX__ReactDOM.jsxs("label", {
                                      children: [
                                        ResX__ReactDOM.jsx("input", {
                                              name: "status",
                                              type: "radio",
                                              value: "off"
                                            }),
                                        "Off"
                                      ]
                                    })
                              ],
                              className: "p-2"
                            }),
                        ResX__ReactDOM.jsx("div", {
                              children: ResX__ReactDOM.jsx("textarea", {
                                    name: "description"
                                  }),
                              className: "p-2"
                            }),
                        ResX__ReactDOM.jsx("div", {
                              children: ResX__ReactDOM.jsx("button", {
                                    children: "Submit form",
                                    id: "test",
                                    "resx-onclick": Caml_option.some(ResX__Client.Actions.make([{
                                                kind: "ToggleClass",
                                                target: "This",
                                                className: "text-xl"
                                              }]))
                                  }),
                              className: "p-2"
                            }),
                        ResX__React.jsx(ErrorBoundary.make, {
                              children: ResX__React.jsx(FailingComponent.make, {}),
                              renderError: (function (err) {
                                  return ResX__ReactDOM.jsx("div", {
                                              children: "Oops, failed! " + Core__Option.getWithDefault(err.message, "-")
                                            });
                                })
                            })
                      ],
                      "hx-post": Caml_option.some(onForm),
                      "hx-swap": Caml_option.some(Htmx.Swap.make("innerHTML", undefined)),
                      "hx-target": Caml_option.some(Htmx.Target.make({
                                TAG: "CssSelector",
                                _0: "#user-single"
                              }))
                    }),
                props.innerContent
              ],
              className: "p-8"
            });
}

var make = UserPage;

exports.onForm = onForm;
exports.make = make;
/* onForm Not a pure module */
